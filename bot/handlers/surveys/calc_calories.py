from aiogram import F, Router
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import CallbackQuery, FSInputFile, Message
from aiogram.utils import markdown as md
from aiogram.utils.chat_action import ChatActionSender

from bot.core.enums import ActivityRate
from bot.core.nutrition_calculator import calc_nutritional_profile
from bot.keyboards.activity_rate import (
    ACTIVITY_RATE_AI_HELP_DATA,
    ACTIVITY_RATE_HELP_DATA,
    ACTIVITY_RATE_TO_DATA,
    activity_rate_keyboard,
)
from bot.keyboards.biological_gender import (
    BIOLOGICAL_GENDER_TO_DATA,
    BIOLOGICAL_GENDER_TO_TEXT,
    biological_gender_keyboard,
)
from bot.keyboards.fat_pct import FAT_PCT_HELP_DATA, fat_pct_keyboard
from bot.keyboards.root import RootKeyboardText
from bot.keyboards.weight_target import WEIGHT_TARGET_TO_DATA, WEIGHT_TARGET_TO_TEXT, weight_target_keyboard
from bot.regexps import float_regexp, int_regexp
from bot.utils.ai_utils import generate_text
from bot.utils.dict_utils import get_key_by_value
from bot.utils.format_utils import format_age, format_number, format_numbers_range
from bot.utils.google_utils import generate_search_link
from bot.utils.message_utils import build_detailed_message
from bot.utils.parse_utils import parse_float
from bot.utils.string_utils import get_tail
from bot.utils.survey_utils import add_messages_to_delete, clear_messages

router = Router(name=__name__)


class CalcCaloriesSurvey(StatesGroup):
    biological_gender = State()
    age = State()
    height = State()
    weight = State()
    fat_pct = State()
    amr = State()
    amr_ai_query = State()
    weight_target = State()


@router.message(F.text == RootKeyboardText.CALC_CALORIES)
async def calc_calories_button_handler(message: Message, state: FSMContext) -> None:
    await state.set_state(CalcCaloriesSurvey.biological_gender)
    sent_message = await message.answer(
        "üöª –û–±–µ—Ä—ñ—Ç—å –≤–∞—à—É –±—ñ–æ–ª–æ–≥—ñ—á–Ω—É —Å—Ç–∞—Ç—å, –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –∫–Ω–æ–ø–∫—É.", reply_markup=biological_gender_keyboard()
    )
    await add_messages_to_delete(state=state, message_ids=[message.message_id, sent_message.message_id])


@router.callback_query(CalcCaloriesSurvey.biological_gender, F.data.in_(BIOLOGICAL_GENDER_TO_DATA.values()))
async def calc_calories_survey_biological_gender_handler(callback_query: CallbackQuery, state: FSMContext) -> None:
    biological_gender = get_key_by_value(BIOLOGICAL_GENDER_TO_DATA, callback_query.data)
    await state.update_data(biological_gender=biological_gender)
    await state.set_state(CalcCaloriesSurvey.age)

    await callback_query.answer()
    icon, output = BIOLOGICAL_GENDER_TO_TEXT[biological_gender].split(maxsplit=1)
    await callback_query.message.edit_text(f"{icon} –í–∞—à–∞ –±—ñ–æ–ª–æ–≥—ñ—á–Ω–∞ —Å—Ç–∞—Ç—å: {md.hbold(output)}")
    sent_message = await callback_query.message.answer("üìÖ –í–∫–∞–∂—ñ—Ç—å –≤–∞—à –≤—ñ–∫:")
    await add_messages_to_delete(state=state, message_ids=[sent_message.message_id])


@router.message(CalcCaloriesSurvey.biological_gender)
async def calc_calories_survey_unknown_biological_gender_handler(message: Message, state: FSMContext) -> None:
    sent_message = await message.answer("‚ö†Ô∏è –û–±–µ—Ä—ñ—Ç—å –±—ñ–æ–ª–æ–≥—ñ—á–Ω—É —Å—Ç–∞—Ç—å, –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –∫–Ω–æ–ø–∫—É –ø—ñ–¥ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º.")
    await add_messages_to_delete(state=state, message_ids=[message.message_id, sent_message.message_id])


@router.message(CalcCaloriesSurvey.age, F.text.regexp(int_regexp))
async def calc_calories_survey_age_handler(message: Message, state: FSMContext) -> None:
    age = int(message.text)
    await state.update_data(age=age)
    await state.set_state(CalcCaloriesSurvey.height)

    sent_message = await message.answer("üìè –í–∫–∞–∂—ñ—Ç—å –≤–∞—à –∑—Ä—ñ—Å—Ç (–≤ —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–∞—Ö):")
    await add_messages_to_delete(state=state, message_ids=[message.message_id, sent_message.message_id])


@router.message(CalcCaloriesSurvey.age, ~F.text.regexp(int_regexp))
async def calc_calories_survey_invalid_age_handler(message: Message, state: FSMContext) -> None:
    sent_message = await message.answer("‚ö†Ô∏è –í—ñ–∫ –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ —Ü—ñ–ª–∏–º —á–∏—Å–ª–æ–º. –í–≤–µ–¥—ñ—Ç—å –π–æ–≥–æ —â–µ —Ä–∞–∑:")
    await add_messages_to_delete(state=state, message_ids=[message.message_id, sent_message.message_id])


@router.message(CalcCaloriesSurvey.height, F.text.regexp(float_regexp))
async def calc_calories_survey_height_handler(message: Message, state: FSMContext) -> None:
    height = parse_float(message.text)
    await state.update_data(height=height)
    await state.set_state(CalcCaloriesSurvey.weight)

    sent_message = await message.answer("‚öñÔ∏è –í–∫–∞–∂—ñ—Ç—å –≤–∞—à—É –≤–∞–≥—É (–≤ –∫—ñ–ª–æ–≥—Ä–∞–º–∞—Ö):")
    await add_messages_to_delete(state=state, message_ids=[message.message_id, sent_message.message_id])


@router.message(CalcCaloriesSurvey.height, ~F.text.regexp(float_regexp))
async def calc_calories_survey_invalid_height_handler(message: Message, state: FSMContext) -> None:
    sent_message = await message.answer("‚ö†Ô∏è –ó—Ä—ñ—Å—Ç –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ —á–∏—Å–ª–æ–º. –í–≤–µ–¥—ñ—Ç—å –π–æ–≥–æ —â–µ —Ä–∞–∑:")
    await add_messages_to_delete(state=state, message_ids=[message.message_id, sent_message.message_id])


@router.message(CalcCaloriesSurvey.weight, F.text.regexp(float_regexp))
async def calc_calories_survey_weight_handler(message: Message, state: FSMContext) -> None:
    weight = parse_float(message.text)
    await state.update_data(weight=weight)
    await state.set_state(CalcCaloriesSurvey.fat_pct)

    sent_message = await message.answer("üçî –í–∫–∞–∂—ñ—Ç—å –≤–∞—à –≤—ñ–¥—Å–æ—Ç–æ–∫ –∂–∏—Ä—É:", reply_markup=fat_pct_keyboard())
    await add_messages_to_delete(state=state, message_ids=[message.message_id, sent_message.message_id])


@router.message(CalcCaloriesSurvey.weight, ~F.text.regexp(float_regexp))
async def calc_calories_survey_invalid_weight_handler(message: Message, state: FSMContext) -> None:
    sent_message = await message.answer("‚ö†Ô∏è –í–∞–≥–∞ –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ —á–∏—Å–ª–æ–º. –í–≤–µ–¥—ñ—Ç—å —ó—ó —â–µ —Ä–∞–∑:")
    await add_messages_to_delete(state=state, message_ids=[message.message_id, sent_message.message_id])


@router.message(CalcCaloriesSurvey.fat_pct, F.text.regexp(float_regexp))
async def calc_calories_survey_fat_pct_handler(message: Message, state: FSMContext) -> None:
    fat_pct = parse_float(message.text)
    await state.update_data(fat_pct=fat_pct)
    await state.set_state(CalcCaloriesSurvey.amr)

    sent_message = await message.answer(
        "üèÉ –û–±–µ—Ä—ñ—Ç—å –≤–∞—à –∫–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ, –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –∫–Ω–æ–ø–∫—É.", reply_markup=activity_rate_keyboard(show_help=True)
    )
    await add_messages_to_delete(state=state, message_ids=[message.message_id, sent_message.message_id])


@router.callback_query(CalcCaloriesSurvey.fat_pct, F.data == FAT_PCT_HELP_DATA)
async def calc_calories_survey_fat_pct_help_handler(callback_query: CallbackQuery, state: FSMContext) -> None:
    async with ChatActionSender.upload_photo(bot=callback_query.bot, chat_id=callback_query.message.chat.id):
        data = await state.get_data()
        fat_pct_helper_path = f"assets/{data['biological_gender']}-fat-pct-helper.jpg"

        await callback_query.answer()
        await callback_query.message.edit_text(
            "üçî –í–∏–∑–Ω–∞—á—Ç–µ –≤–∞—à –≤—ñ–¥—Å–æ—Ç–æ–∫ –∂–∏—Ä—É, –ø–æ–≥–ª—è–Ω—É–≤—à–∏ –Ω–∞ —Ñ–æ—Ç–æ, —Ç–∞ –≤–∫–∞–∂—ñ—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è:"
        )
        sent_photo = await callback_query.message.answer_photo(
            photo=FSInputFile(path=fat_pct_helper_path),
            caption=md.html_decoration.italic(
                f"–Ø–∫—â–æ –≤–∞–º –≤–∞–∂–∫–æ –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –≤—ñ–¥—Å–æ—Ç–æ–∫ –∂–∏—Ä—É –∑–∞ —Ñ–æ—Ç–æ, –≤–∏ –º–æ–∂–µ—Ç–µ —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—è "
                f"{md.hlink('–∫–∞–ª—ñ–ø–µ—Ä–æ–º', generate_search_link('–∫–∞–ª—ñ–ø–µ—Ä'))}."
            ),
        )
        await add_messages_to_delete(state=state, message_ids=[sent_photo.message_id])


@router.message(CalcCaloriesSurvey.fat_pct, ~F.text.regexp(float_regexp))
async def calc_calories_survey_invalid_fat_pct_handler(message: Message, state: FSMContext) -> None:
    sent_message = await message.answer("‚ö†Ô∏è –í—ñ–¥—Å–æ—Ç–æ–∫ –∂–∏—Ä—É –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ —á–∏—Å–ª–æ–º. –í–≤–µ–¥—ñ—Ç—å –π–æ–≥–æ —â–µ —Ä–∞–∑:")
    await add_messages_to_delete(state=state, message_ids=[message.message_id, sent_message.message_id])


@router.callback_query(CalcCaloriesSurvey.amr, F.data.in_(ACTIVITY_RATE_TO_DATA.values()))
async def calc_calories_survey_amr_handler(callback_query: CallbackQuery, state: FSMContext) -> None:
    await add_messages_to_delete(state=state, message_ids=[callback_query.message.message_id])
    await clear_messages(
        bot=callback_query.bot, chat_id=callback_query.message.chat.id, state=state, subset=slice(1, None)
    )

    amr = get_key_by_value(ACTIVITY_RATE_TO_DATA, callback_query.data)
    await state.update_data(amr=amr)
    data = await state.get_data()
    await state.set_state(CalcCaloriesSurvey.weight_target)

    await callback_query.message.answer(
        build_detailed_message(
            title="üìã –í—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ",
            details=[
                ("–ë—ñ–æ–ª–æ–≥—ñ—á–Ω–∞ —Å—Ç–∞—Ç—å", get_tail(BIOLOGICAL_GENDER_TO_TEXT[data["biological_gender"]])),
                ("–í—ñ–∫", format_age(data["age"])),
                ("–†—ñ—Å—Ç", format_number(data["height"], "—Å–º")),
                ("–í–∞–≥–∞", format_number(data["weight"], "–∫–≥")),
                ("–í—ñ–¥—Å–æ—Ç–æ–∫ –∂–∏—Ä—É", format_number(data["fat_pct"], "%", sep="")),
                ("–ö–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ", format_number(data["amr"].value, precision=3)),
            ],
            footer="üéØ –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—å, —â–æ –≤—Å—ñ –¥–∞–Ω—ñ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ, —Ç–∞ –æ–±–µ—Ä—ñ—Ç—å –≤–∞—à—É –º–µ—Ç—É, –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É –∫–Ω–æ–ø–∫—É.",
            bold_detail_name=False,
            bold_detail_value=True,
        ),
        reply_markup=weight_target_keyboard(),
    )


@router.callback_query(CalcCaloriesSurvey.amr, F.data == ACTIVITY_RATE_HELP_DATA)
async def calc_calories_survey_amr_help_handler(callback_query: CallbackQuery) -> None:
    await callback_query.answer()
    await callback_query.message.edit_text(
        build_detailed_message(
            title="‚ÑπÔ∏è –í–∏–¥–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ —Ç–∞ —ó—Ö –∫–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç–∏",
            details=[
                (
                    f"–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å (AMR: {ActivityRate.SEDENTARY.value})",
                    "—Å–∏–¥—è—á–∏–π —Å–ø–æ—Å—ñ–± –∂–∏—Ç—Ç—è, –º–∞–π–∂–µ –≤—ñ–¥—Å—É—Ç–Ω—è —Ñ—ñ–∑–∏—á–Ω–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å, –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å —Ä–µ–≥—É–ª—è—Ä–Ω–∏—Ö —Ç—Ä–µ–Ω—É–≤–∞–Ω—å",
                ),
                (
                    f"–õ–µ–≥–∫–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å (AMR: {ActivityRate.LIGHTLY_ACTIVE.value})",
                    "–º–∞–ª–æ—Ä—É—Ö–ª–∏–≤–∏–π —Å–ø–æ—Å—ñ–± –∂–∏—Ç—Ç—è, –ª–µ–≥–∫—ñ —Ñ—ñ–∑–∏—á–Ω—ñ –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è, —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è 1-3 —Ä–∞–∑–∏ –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å",
                ),
                (
                    f"–°–µ—Ä–µ–¥–Ω—è –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å (AMR: {ActivityRate.MODERATELY_ACTIVE.value})",
                    "–∞–∫—Ç–∏–≤–Ω–∏–π —Å–ø–æ—Å—ñ–± –∂–∏—Ç—Ç—è, —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è 3-5 —Ä–∞–∑—ñ–≤ –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å",
                ),
                (
                    f"–í–∏—Å–æ–∫–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å (AMR: {ActivityRate.VERY_ACTIVE.value})",
                    "—â–æ–¥–µ–Ω–Ω—ñ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è, —ñ–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ñ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ñ –∑–∞–Ω—è—Ç—Ç—è, –≤–∞–∂–∫–∞ —Ñ—ñ–∑–∏—á–Ω–∞ —Ä–æ–±–æ—Ç–∞",
                ),
                (
                    f"–î—É–∂–µ –≤–∏—Å–æ–∫–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å (AMR: {ActivityRate.EXTRA_ACTIVE.value})",
                    "—Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –¥–≤—ñ—á—ñ –Ω–∞ –¥–µ–Ω—å, –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π —Å–ø–æ—Ä—Ç, –¥—É–∂–µ –≤–∞–∂–∫–∞ —Ñ—ñ–∑–∏—á–Ω–∞ –ø—Ä–∞—Ü—è",
                ),
            ],
            footer="üèÉ –û–±–µ—Ä—ñ—Ç—å –∫–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ, —â–æ –Ω–∞–π–±—ñ–ª—å—à–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –≤–∞—à–æ–º—É —Å–ø–æ—Å–æ–±—É –∂–∏—Ç—Ç—è, –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –∫–Ω–æ–ø–∫—É.",
            numerate_details=True,
            details_sep="\n\n",
            italic_footer=False,
        ),
        reply_markup=activity_rate_keyboard(show_ai_help=True),
    )


@router.callback_query(CalcCaloriesSurvey.amr, F.data == ACTIVITY_RATE_AI_HELP_DATA)
async def calc_calories_survey_amr_ai_help_handler(callback_query: CallbackQuery, state: FSMContext) -> None:
    await state.set_state(CalcCaloriesSurvey.amr_ai_query)

    await callback_query.answer()
    await callback_query.message.edit_reply_markup(reply_markup=activity_rate_keyboard())
    sent_message = await callback_query.message.answer(
        "ü§ñ –î–µ—Ç–∞–ª—å–Ω–æ –æ–ø–∏—à—ñ—Ç—å –≤–∞—à —Å–ø–æ—Å—ñ–± –∂–∏—Ç—Ç—è, —â–æ–± AI –º—ñ–≥ –¥–æ–ø–æ–º–æ–≥—Ç–∏ –≤–∞–º –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –≤–∞—à –∫–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ:"
    )
    await add_messages_to_delete(state=state, message_ids=[sent_message.message_id])


@router.message(CalcCaloriesSurvey.amr_ai_query)
async def calc_calories_survey_amr_ai_query_handler(message: Message, state: FSMContext) -> None:
    async with ChatActionSender.typing(bot=message.bot, chat_id=message.chat.id):
        await state.set_state(CalcCaloriesSurvey.amr)

        query = (
            "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–∑–Ω–∞—á—Ç–µ –∫–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ (1.2, 1.375, 1.55, 1.725 –∞–±–æ 1.9) –¥–ª—è –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –æ–ø–∏—Å—É: "
            f'"{message.text}".'
        )
        ai_response = await generate_text(query=query)
        sent_message = await message.answer(md.text(md.hbold("ü§ñ –í—ñ–¥–ø–æ–≤—ñ–¥—å AI:"), f'"{ai_response.rstrip(".")}".'))
        await add_messages_to_delete(state=state, message_ids=[message.message_id, sent_message.message_id])


@router.message(CalcCaloriesSurvey.amr)
async def calc_calories_survey_invalid_amr_handler(message: Message, state: FSMContext) -> None:
    sent_message = await message.answer("‚ö†Ô∏è –û–±–µ—Ä—ñ—Ç—å –∫–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ, –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –∫–Ω–æ–ø–∫—É –ø—ñ–¥ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º.")
    await add_messages_to_delete(state=state, message_ids=[message.message_id, sent_message.message_id])


@router.callback_query(CalcCaloriesSurvey.weight_target, F.data.in_(WEIGHT_TARGET_TO_DATA.values()))
async def calc_calories_survey_weight_target_handler(callback_query: CallbackQuery, state: FSMContext) -> None:
    await clear_messages(
        bot=callback_query.bot, chat_id=callback_query.message.chat.id, state=state, subset=slice(1, None)
    )

    weight_target = get_key_by_value(WEIGHT_TARGET_TO_DATA, callback_query.data)
    await state.update_data(weight_target=weight_target)
    data = await state.get_data()
    await state.clear()

    await callback_query.answer()
    await callback_query.message.edit_text(
        build_detailed_message(
            title="üìã –í—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ",
            details=[
                ("–ë—ñ–æ–ª–æ–≥—ñ—á–Ω–∞ —Å—Ç–∞—Ç—å", get_tail(BIOLOGICAL_GENDER_TO_TEXT[data["biological_gender"]])),
                ("–í—ñ–∫", format_age(data["age"])),
                ("–†—ñ—Å—Ç", format_number(data["height"], "—Å–º")),
                ("–í–∞–≥–∞", format_number(data["weight"], "–∫–≥")),
                ("–í—ñ–¥—Å–æ—Ç–æ–∫ –∂–∏—Ä—É", format_number(data["fat_pct"], "%", sep="")),
                ("–ö–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ", format_number(data["amr"].value, precision=3)),
            ],
            footer=(
                "üéØ –ù–∏–∂—á–µ –≤–∏ –±–∞—á–∏—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ñ –ø–æ–∂–∏–≤–Ω—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏ —â–æ–± "
                + md.hbold(get_tail(WEIGHT_TARGET_TO_TEXT[data["weight_target"]]).upper())
                + ", —Ä–æ–∑—Ä–∞—Ö–æ–≤–∞–Ω—ñ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤—Ö—ñ–¥–Ω–∏—Ö –¥–∞–Ω–∏—Ö."
            ),
            bold_detail_name=False,
            bold_detail_value=True,
        )
    )

    nutritional_profile = calc_nutritional_profile(
        gender=data["biological_gender"],
        age=data["age"],
        height=data["height"],
        weight=data["weight"],
        fat_pct=data["fat_pct"],
        amr=data["amr"],
        target=data["weight_target"],
    )
    min_calories, max_calories = nutritional_profile["calories"]
    min_carbohydrates, max_carbohydrates = nutritional_profile["carbohydrates"]
    min_fiber, max_fiber = nutritional_profile["fiber"]

    await callback_query.message.answer(
        build_detailed_message(
            title="üìä –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ñ –ø–æ–∂–∏–≤–Ω—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏",
            details=[
                ("–ö–∞–ª–æ—Ä—ñ—ó", format_numbers_range(min_calories, max_calories, "–∫–∫–∞–ª", precision=0)),
                ("–ë—ñ–ª–∫–∏", format_number(nutritional_profile["proteins"], "–≥", precision=0)),
                ("–ñ–∏—Ä–∏", format_number(nutritional_profile["fats"], "–≥", precision=0)),
                ("–í—É–≥–ª–µ–≤–æ–¥–∏", format_numbers_range(min_carbohydrates, max_carbohydrates, "–≥", precision=0)),
                ("–í–æ–¥–∞", format_number(nutritional_profile["water"], "–ª", precision=2)),
                ("–ö–ª—ñ—Ç–∫–æ–≤–∏–Ω–∞", format_numbers_range(min_fiber, max_fiber, "–≥")),
                ("–°—ñ–ª—å", format_number(nutritional_profile["salt"], "–≥")),
                ("–ù–æ—Ä–º–∞ –∫–æ—Ñ–µ—ó–Ω—É", format_number(nutritional_profile["caffeine_norm"], "–º–≥", precision=0)),
                ("–ú–∞–∫—Å. –¥–æ–∑–∞ –∫–æ—Ñ–µ—ó–Ω—É", format_number(nutritional_profile["caffeine_max"], "–º–≥", precision=0)),
            ],
            footer=(
                md.hbold("‚ö†Ô∏è –ó–≤–µ—Ä–Ω—ñ—Ç—å —É–≤–∞–≥—É: ")
                + "—Ü—ñ –¥–∞–Ω—ñ –Ω–µ —î –¥–æ—Å—Ç–æ–≤—ñ—Ä–Ω–æ —Ç–æ—á–Ω–∏–º–∏, –æ—Å–∫—ñ–ª—å–∫–∏ –≤–æ–Ω–∏ –∑–∞–ª–µ–∂–∞—Ç—å –≤—ñ–¥ —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏—Ö –æ—Å–æ–±–ª–∏–≤–æ—Å—Ç–µ–π –≤–∞—à–æ–≥–æ "
                + "–æ—Ä–≥–∞–Ω—ñ–∑–º—É. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —ó—Ö —è–∫ –≤—ñ–¥–ø—Ä–∞–≤–Ω—É —Ç–æ—á–∫—É —Ç–∞ –∫–æ—Ä–∏–≥—É–π—Ç–µ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤–∞—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤."
            ),
            bold_detail_name=False,
            bold_detail_value=True,
        )
    )
    # TODO: add a button to show detailed info (lbm, bmr, tef...).


@router.message(CalcCaloriesSurvey.weight_target)
async def calc_calories_survey_unknown_weight_target_handler(message: Message, state: FSMContext) -> None:
    sent_message = await message.answer("‚ö†Ô∏è –û–±–µ—Ä—ñ—Ç—å –≤–∞—à—É –º–µ—Ç—É, –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –∫–Ω–æ–ø–∫—É –ø—ñ–¥ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º.")
    await add_messages_to_delete(state=state, message_ids=[message.message_id, sent_message.message_id])
